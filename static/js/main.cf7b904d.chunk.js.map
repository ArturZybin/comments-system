{"version":3,"sources":["redux/rootReducer.ts","redux/authUserReducer.ts","redux/types.ts","firebase/FirebaseConstructor.js","firebase/FirebaseContext.ts","constants/routes.ts","firebase/withAuthorisation.tsx","components/SignOutButton.tsx","components/NavBar.tsx","components/pages/CommentsPage.tsx","components/pages/SignInPage.tsx","components/PasswordChangeForm.tsx","components/pages/PasswordForgetPage.tsx","components/pages/AccountPage.tsx","components/pages/SignUpPage.tsx","App.tsx","firebase/useAuthentication.tsx","redux/actions.ts","index.tsx"],"names":["rootReducer","combineReducers","authUser","state","action","type","payload","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","FirebaseContext","React","createContext","condition","SignOutButton","firebase","useContext","onClick","NavBar","useSelector","className","AuthNavBar","to","NonAuthNavBar","CommentsPage","SignInPage","history","useHistory","useState","setEmail","setPassword","error","setError","isInvalid","length","validator","validate","onSubmit","event","preventDefault","then","set","push","catch","name","value","onChange","target","placeholder","disabled","message","PasswordChangeForm","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","PasswordForgetPage","PasswordForgetButton","AccountPage","Component","props","SignUpPage","username","setUsername","App","dispatch","useDispatch","useEffect","onAuthStateChanged","useAuthentication","exact","path","component","store","createStore","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.cf7b904d.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { authUserReducer } from \"./authUserReducer\";\n\nexport const rootReducer = combineReducers({\n   authUser: authUserReducer\n})","import { CHANGE_AUTH_USER } from \"./types\";\nimport { TAuthUser } from \"../constants/typescript-types\";\n\n\ninterface IAction {\n   type: string,\n   payload: TAuthUser\n}\n\nexport const authUserReducer = (state: TAuthUser = null, action: IAction) => {\n   switch(action.type) {\n      case CHANGE_AUTH_USER:\n         return action.payload\n      default:\n         return state\n   }\n}","// authUser\nexport const CHANGE_AUTH_USER = 'CHANGE_AUTH_USER'","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\n\nconst config = {\n   apiKey: \"AIzaSyDpt6WXqe7-GrSdSZxe1w1jD_h9XQIQWYA\",\n   authDomain: \"comments-system-6e56a.firebaseapp.com\",\n   databaseURL: \"https://comments-system-6e56a.firebaseio.com\",\n   projectId: \"comments-system-6e56a\",\n   storageBucket: \"comments-system-6e56a.appspot.com\",\n   messagingSenderId: \"463788584226\",\n   appId: \"1:463788584226:web:d0787997fe53b69d8d497b\",\n   measurementId: \"G-LMGZ5VEP27\"\n};\n\n\nexport class FirebaseConstructor {\n   constructor() {\n      app.initializeApp(config)\n\n      this.auth = app.auth()\n      this.db = app.database()\n   }\n\n   // *** Auth API ***\n   doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password)\n\n   doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password)\n\n   doSignOut = () => this.auth.signOut()\n\n   doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email)\n\n   doPasswordUpdate = (password) => this.auth.currentUser.updatePassword(password)\n\n   // *** Database API ***\n   user = (uid) => this.db.ref(`users/${uid}`)\n\n   users = () => this.db.ref('users')\n}","import React from 'react'\nimport { FirebaseConstructor } from './FirebaseConstructor'\n\nexport const Firebase = new FirebaseConstructor()\nexport const FirebaseContext = React.createContext<FirebaseConstructor>(Firebase)","export const COMMENTS = '/'\nexport const SIGN_IN = '/signin'\nexport const SIGN_UP = '/signup'\nexport const ACCOUNT = '/account'\nexport const PASSWORD_FORGET = '/password-forget'","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { TAuthUser, IGlobalState } from '../constants/typescript-types'\n\nimport * as ROUTES from '../constants/routes'\n\n\ntype TCondition = (authUser: TAuthUser) => boolean\n\nexport const withAuthorisation = (condition: TCondition) => (Component: React.FC) => {\n\n   const WithAuthorisation: React.FC = (props) => {\n      const history = useHistory()\n      const authUser = useSelector((state: IGlobalState) => state.authUser)\n\n      if (!condition(authUser)) {\n         history.push(ROUTES.SIGN_IN)\n      }\n\n      return authUser ? <Component {...props} /> : null\n   }\n\n   return WithAuthorisation\n}","import React, { useContext } from 'react'\nimport { FirebaseContext } from '../firebase/FirebaseContext'\n\nexport const SignOutButton: React.FC = () => {\n   const firebase = useContext(FirebaseContext)\n\n   return (\n      <button onClick={firebase.doSignOut}>\n         Sign Out\n      </button>\n   )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { SignOutButton } from './SignOutButton'\n\nimport * as ROUTES from '../constants/routes'\nimport { TAuthUser, IGlobalState } from '../constants/typescript-types'\n\n\n\nexport const NavBar: React.FC = () => {\n   const authUser: TAuthUser = useSelector((state: IGlobalState) => state.authUser)\n\n   return (\n      <nav className=\"navbar\">\n         {authUser ? <AuthNavBar /> : <NonAuthNavBar />}\n      </nav>\n   )\n}\n\n\nconst AuthNavBar: React.FC = () => (\n   <ul>\n      <li>\n         <Link to={ROUTES.COMMENTS}>Comments</Link>\n      </li>\n      <li>\n         <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </li>\n      <SignOutButton />\n   </ul>\n)\n\nconst NonAuthNavBar: React.FC = () => (\n   <ul>\n      <li>\n         <Link to={ROUTES.COMMENTS}>Comments</Link>\n      </li>\n      <li>\n         <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n      </li>\n      <li>\n         <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n      </li>\n   </ul>\n)","import React from 'react'\n\nexport const CommentsPage: React.FC = () => (\n   <h2>CommentsPage</h2>\n)","import React, { useState, useContext } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport validator from 'email-validator';\n\nimport { FirebaseContext } from '../../firebase/FirebaseContext'\nimport * as ROUTES from '../../constants/routes'\n\n\nexport const SignInPage: React.FC = () => {\n   const history = useHistory()\n   const firebase = useContext(FirebaseContext)\n\n   const [email, setEmail] = useState<string>('')\n   const [password, setPassword] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n\n      firebase\n         .doSignInWithEmailAndPassword(email, password)\n         .then((authUser) => {\n            firebase\n               .user(authUser.user?.uid)\n               .set({ email })\n         })\n         .then(() => {\n            setEmail('')\n            setPassword('')\n            setError(null)\n\n            history.push(ROUTES.COMMENTS)\n         })\n         .catch(setError)\n   }\n\n\n   const isInvalid = password.length < 6 || !validator.validate(email)\n\n\n   return (\n      <>\n         <h2>Sign In</h2>\n\n         <form onSubmit={handleSubmit}>\n            <input\n               name=\"email\"\n               value={email}\n               onChange={(event) => setEmail(event.target.value)}\n               type=\"text\"\n               placeholder=\"Email Address\"\n            />\n            <input\n               name=\"password\"\n               value={password}\n               onChange={(event) => setPassword(event.target.value)}\n               type=\"password\"\n               placeholder=\"Password\"\n            />\n            <button disabled={isInvalid} type=\"submit\">\n               Sign In\n            </button>\n\n            {error && <p>{error.message}</p>}\n         </form>\n         \n         <p>\n            Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign up</Link>\n         </p>\n      </>\n   )\n}","import React, { useState, useContext } from 'react'\nimport { FirebaseContext } from '../firebase/FirebaseContext'\n\n\nexport const PasswordChangeForm: React.FC = () => {\n   const firebase = useContext(FirebaseContext)\n\n   const [passwordOne, setPasswordOne] = useState<string>('')\n   const [passwordTwo, setPasswordTwo] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n\n      firebase\n         .doPasswordUpdate(passwordOne)\n         .then(() => {\n            setPasswordOne('')\n            setPasswordTwo('')\n            setError(null)\n         })\n         .catch(setError)\n   }\n\n   const isInvalid = passwordOne !== passwordTwo || passwordOne === ''\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <input\n            name=\"passwordOne\"\n            value={passwordOne}\n            onChange={(event) => setPasswordOne(event.target.value)}\n            type=\"password\"\n            placeholder=\"New Password\"\n         />\n         <input\n            name=\"passwordTwo\"\n            value={passwordTwo}\n            onChange={(event) => setPasswordTwo(event.target.value)}\n            type=\"password\"\n            placeholder=\"Confirm New Password\"\n         />\n         <button disabled={isInvalid} type=\"submit\">\n            Change My Password\n            </button>\n\n         {error && <p>{error.message}</p>}\n      </form>\n   )\n}","import React, { useState, useContext } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { FirebaseContext } from '../../firebase/FirebaseContext'\nimport { IGlobalState } from '../../constants/typescript-types'\n\n\nexport const PasswordForgetPage: React.FC = () => (\n   <>\n      <h2>Reset Password</h2>\n      <PasswordForgetButton />\n   </>\n)\n\n\nexport const PasswordForgetButton: React.FC = () => {\n   const firebase = useContext(FirebaseContext)\n\n   const authUser = useSelector((state: IGlobalState) => state.authUser)\n   const email = authUser?.email\n\n   const [error, setError] = useState<Error | null>(null)\n\n   function handleReset(): void {\n      firebase\n         .doPasswordReset(email)\n         .then(() => {\n            setError(null)\n         })\n         .catch(setError)\n   }\n\n\n   return (\n      <>\n         <button onClick={handleReset}>\n            Reset My Password\n         </button>\n\n         {error && <p>{error.message}</p>}\n      </>\n   )\n}","import React from 'react'\n\nimport { PasswordChangeForm } from '../PasswordChangeForm'\nimport { PasswordForgetButton } from './PasswordForgetPage'\nimport { withAuthorisation } from '../../firebase/withAuthorisation'\nimport { TAuthUser } from '../../constants/typescript-types'\n\n\nconst AccountPageBase: React.FC = () => (\n   <>\n      <h2>AccountPage</h2>\n      <PasswordChangeForm />\n      <PasswordForgetButton />\n   </>\n)\n\nconst condition = (authUser: TAuthUser) => !!authUser\n\nexport const AccountPage = withAuthorisation(condition)(AccountPageBase)","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport validator from 'email-validator';\n\nimport { FirebaseContext } from '../../firebase/FirebaseContext'\nimport * as ROUTES from '../../constants/routes'\n\n\nexport const SignUpPage: React.FC = () => {\n   const history = useHistory()\n   const firebase = useContext(FirebaseContext)\n\n   const [username, setUsername] = useState<string>('')\n   const [email, setEmail] = useState<string>('')\n   const [passwordOne, setPasswordOne] = useState<string>('')\n   const [passwordTwo, setPasswordTwo] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n\n      firebase\n         .doCreateUserWithEmailAndPassword(email, passwordOne)\n         .then((authUser) => {\n            firebase\n               .user(authUser.user?.uid)\n               .set({ email })\n         })\n         .then(() => {\n            setUsername('')\n            setEmail('')\n            setPasswordOne('')\n            setPasswordTwo('')\n            setError(null)\n\n            history.push(ROUTES.COMMENTS)\n         })\n         .catch(setError)\n   }\n\n\n   const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne.length < 6 ||\n      !validator.validate(email) ||\n      username === ''\n\n\n   return (\n      <>\n         <h2>Sign Up</h2>\n         <form onSubmit={handleSubmit}>\n            <input\n               name=\"username\"\n               value={username}\n               onChange={(event) => setUsername(event.target.value)}\n               type=\"text\"\n               placeholder=\"Full Name\"\n            />\n            <input\n               name=\"email\"\n               value={email}\n               onChange={(event) => setEmail(event.target.value)}\n               type=\"text\"\n               placeholder=\"Email Address\"\n            />\n            <input\n               name=\"passwordOne\"\n               value={passwordOne}\n               onChange={(event) => setPasswordOne(event.target.value)}\n               type=\"password\"\n               placeholder=\"Password\"\n            />\n            <input\n               name=\"passwordTwo\"\n               value={passwordTwo}\n               onChange={(event) => setPasswordTwo(event.target.value)}\n               type=\"password\"\n               placeholder=\"Confirm Password\"\n            />\n            <button disabled={isInvalid} type=\"submit\">\n               Sign Up\n            </button>\n\n            {error && <p>{error.message}</p>}\n         </form>\n      </>\n   )\n}","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { useAuthentication } from './firebase/useAuthentication';\nimport * as ROUTES from './constants/routes'\n\nimport { NavBar } from './components/NavBar';\nimport { CommentsPage } from './components/pages/CommentsPage';\nimport { SignInPage } from './components/pages/SignInPage';\nimport { AccountPage } from './components/pages/AccountPage';\nimport { SignUpPage } from './components/pages/SignUpPage';\nimport { PasswordForgetPage } from './components/pages/PasswordForgetPage';\n\nimport 'normalize.css'\nimport './styles/style.scss'\n\n\nexport const App: React.FC = () => {\n   useAuthentication()\n   \n   return (\n      <BrowserRouter>\n         <NavBar />\n         <hr/>\n\n         <Route exact path={ROUTES.COMMENTS} component={CommentsPage}/>\n         <Route path={ROUTES.SIGN_IN} component={SignInPage}/>\n         <Route path={ROUTES.SIGN_UP} component={SignUpPage}/>\n         <Route path={ROUTES.ACCOUNT} component={AccountPage}/>\n         <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage}/>\n      </BrowserRouter>\n   );\n}","import { useEffect, useContext } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { TAuthUser } from '../constants/typescript-types'\nimport { changeAuthUser } from '../redux/actions'\nimport { FirebaseContext } from './FirebaseContext'\n\nexport function useAuthentication() {\n   const dispatch = useDispatch()\n   const firebase = useContext(FirebaseContext)\n\n   useEffect(() => {\n      const unsubscribe = firebase.auth.onAuthStateChanged((authUser: TAuthUser) => {\n         dispatch(changeAuthUser(authUser))\n      })\n\n      return unsubscribe\n   // eslint-disable-next-line\n   }, [])\n}","import { CHANGE_AUTH_USER } from \"./types\";\nimport { TAuthUser } from \"../constants/typescript-types\";\n\n// authUser -----------------------------------------------------------------------\nexport const changeAuthUser = (user: TAuthUser) => ({\n   type: CHANGE_AUTH_USER,\n   payload: user\n})","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { rootReducer } from './redux/rootReducer';\n\nimport { App } from './App';\nimport { Firebase, FirebaseContext } from './firebase/FirebaseContext';\n\n\n\nconst store = createStore(rootReducer)\n\nrender(\n   <React.StrictMode>\n      <Provider store={store}>\n         <FirebaseContext.Provider value={Firebase}>\n            <App />\n         </FirebaseContext.Provider>\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);"],"sourceRoot":""}