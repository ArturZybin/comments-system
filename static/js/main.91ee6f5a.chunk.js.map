{"version":3,"sources":["img/avatar.svg","img/comments.svg","img/heart.svg","img/filled-heart.svg","redux/authUserReducer.ts","redux/commentsReducer.ts","redux/rootReducer.ts","redux/types.ts","redux/actions.ts","firebase/FirebaseConstructor.ts","firebase/FirebaseContext.ts","constants/routes.ts","components/NavBar.tsx","components/pages/comments/CommentForm.tsx","components/pages/comments/Comment.tsx","components/pages/comments/CommentsPage.tsx","firebase/withAuthorisation.tsx","components/pages/comments/useCommentsLoading.tsx","components/pages/auth/SignInPage.tsx","components/pages/auth/SignUpPage.tsx","components/pages/auth/PasswordResetPage.tsx","components/pages/account/SignOutButton.tsx","components/pages/account/PasswordUpdateForm.tsx","components/pages/account/AccountPage.tsx","App.tsx","firebase/useAuthentication.tsx","index.tsx"],"names":["module","exports","INITIAL_STATE","authUser","username","comments","isCommentsOver","rootReducer","combineReducers","authUserStore","state","action","type","payload","commentsStore","index","likesCount","isLiked","setCommentLikes","commentIndex","setIsCommentLiked","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","auth","db","parentURL","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","userRef","uid","collection","doc","commentsRef","commentLikesRef","commentRef","doCreateComment","comment","add","app","initializeApp","this","firestore","queries","window","location","search","substring","split","pair","getParentURL","FirebaseContext","React","createContext","COMMENTS","NavBar","useSelector","store","isCurrentPageComments","useLocation","pathname","ROUTES","commentsClassname","accountClassname","className","to","src","commentsSrc","alt","avatarSrc","CommentForm","history","useHistory","dispatch","useDispatch","firebase","useContext","useState","text","setText","onSubmit","event","preventDefault","authorUsername","authorUID","created","Timestamp","fromMillis","Date","now","then","docRef","createComment","catch","error","console","push","value","onChange","target","maxLength","placeholder","Comment","useEffect","get","querySnapshot","docs","length","filter","data","loadCommentLikes","heartSrc","filledHeart","heart","moment","unix","seconds","fromNow","onClick","undefined","authUserLikeRef","delete","set","width","condition","CommentsPage","orderBy","limit","query","setQuery","loading","setLoading","loadComments","documentSnapshots","lastVisible","startAfter","loadedComments","map","ref","addComments","useCommentsLoading","commentsTemplate","key","nanoseconds","disabled","SignInPage","setEmail","setPassword","setError","emailClassName","passwordClassName","validator","validate","isFormInvalid","name","trim","message","SignUpPage","setUsername","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","usernameClassName","passwordOneClassName","passwordTwoClassName","user","PasswordResetPage","SignOutButton","PasswordUpdateForm","AccountPage","Component","props","isConfirm","App","onAuthStateChanged","exists","setAuthUserUsername","useAuthentication","basename","exact","path","component","persistConfig","blacklist","storage","persistedReducer","persistReducer","createStore","composeWithDevTools","persistor","persistStore","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.91ee6f5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.511718fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/comments.d68b6143.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.77100eea.svg\";","module.exports = __webpack_public_path__ + \"static/media/filled-heart.f2610513.svg\";","import { CHANGE_AUTH_USER, SET_AUTH_USER_USERNAME } from \"./types\";\nimport { TAuthUser, IStore } from \"../constants/typescript-types\";\n\n\ninterface IAction {\n   type: string,\n   payload: TAuthUser | string\n}\n\ntype TState = IStore['authUserStore']\n\n\nconst INITIAL_STATE = {\n   authUser: null,\n   username: null\n}\n\nexport function authUserReducer (state: TState = INITIAL_STATE, action: IAction) {\n   switch(action.type) {\n      case CHANGE_AUTH_USER:\n         return { authUser: action.payload, username: null } as TState\n      case SET_AUTH_USER_USERNAME:\n         return { ...state, username: action.payload } as TState\n      default:\n         return state\n   }\n}","import { IComment, IStore } from \"../constants/typescript-types\";\nimport { ADD_COMMENTS, SET_COMMENTS_OVER, CREATE_COMMENT, SET_COMMENT_LIKES, SET_IS_COMMENT_LIKED } from \"./types\";\n\n\ninterface IAction {\n   type: string,\n   payload: any\n}\n\ntype TState = IStore['commentsStore']\n\nconst INITIAL_STATE: TState = {\n   comments: [],\n   isCommentsOver: false\n}\n\nexport function commentsReducer(state: TState = INITIAL_STATE, action: IAction) {\n   let comments: IComment[]\n\n   switch (action.type) {\n      case ADD_COMMENTS:\n         comments = [...state.comments, ...action.payload]\n         return { ...state, comments }\n\n      case SET_COMMENTS_OVER:\n         return { ...state, isCommentsOver: true }\n\n      case CREATE_COMMENT:\n         comments = [action.payload, ...state.comments]\n         return { ...state, comments }\n      \n      case SET_COMMENT_LIKES:\n         comments = state.comments\n         comments[action.payload.index].likesCount = action.payload.likesCount\n         return { ...state, comments }\n\n      case SET_IS_COMMENT_LIKED:\n         comments = state.comments\n         comments[action.payload.index].isLiked = action.payload.isLiked\n         return { ...state, comments }\n         \n      default:\n         return state\n   }\n}","import { combineReducers } from \"redux\";\nimport { authUserReducer } from \"./authUserReducer\";\nimport { commentsReducer } from \"./commentsReducer\";\n\nexport const rootReducer = combineReducers({\n   authUserStore: authUserReducer,\n   commentsStore: commentsReducer\n})","// authUser\nexport const CHANGE_AUTH_USER = 'CHANGE_AUTH_USER'\nexport const SET_AUTH_USER_USERNAME = 'SET_AUTH_USER_USERNAME'\n// comments\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\nexport const SET_COMMENTS_OVER = 'SET_COMMENTS_OVER'\nexport const CREATE_COMMENT = 'CREATE_COMMENT'\nexport const SET_COMMENT_LIKES = 'SET_COMMENT_LIKES'\nexport const SET_IS_COMMENT_LIKED = 'SET_IS_COMMENT_LIKED'","import { CHANGE_AUTH_USER, SET_AUTH_USER_USERNAME, ADD_COMMENTS, SET_COMMENTS_OVER, CREATE_COMMENT, SET_COMMENT_LIKES, SET_IS_COMMENT_LIKED } from \"./types\";\nimport { TAuthUser, IComment } from \"../constants/typescript-types\";\n\n// authUser -----------------------------------------------------------------------\nexport const changeAuthUser = (user: TAuthUser) => ({\n   type: CHANGE_AUTH_USER,\n   payload: user\n})\n\nexport const setAuthUserUsername = (username: string) => ({\n   type: SET_AUTH_USER_USERNAME,\n   payload: username\n})\n\n// comments -----------------------------------------------------------------------\nexport const addComments = (comments: IComment[]) => ({\n   type: ADD_COMMENTS,\n   payload: comments\n})\n\nexport const setCommentsOver = () => ({ type: SET_COMMENTS_OVER })\n\nexport const createComment = (comment: IComment) => ({\n   type: CREATE_COMMENT,\n   payload: comment\n})\n\nexport const setCommentLikes = (commentIndex: number, likesCount: number) => ({\n   type: SET_COMMENT_LIKES,\n   payload: { index: commentIndex, likesCount }\n})\n\nexport const setIsCommentLiked = (commentIndex: number, isLiked: boolean) => ({\n   type: SET_IS_COMMENT_LIKED,\n   payload: { index: commentIndex, isLiked }\n})","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport { IComment } from '../constants/typescript-types';\n\n\nconst config = {\n   apiKey: \"AIzaSyDpt6WXqe7-GrSdSZxe1w1jD_h9XQIQWYA\",\n   authDomain: \"comments-system-6e56a.firebaseapp.com\",\n   databaseURL: \"https://comments-system-6e56a.firebaseio.com\",\n   projectId: \"comments-system-6e56a\",\n   storageBucket: \"comments-system-6e56a.appspot.com\",\n   messagingSenderId: \"463788584226\",\n   appId: \"1:463788584226:web:d0787997fe53b69d8d497b\",\n   measurementId: \"G-LMGZ5VEP27\"\n};\n\n\nexport class FirebaseConstructor {\n   auth: app.auth.Auth\n   db: app.firestore.Firestore\n   parentURL: string\n\n   constructor() {\n      app.initializeApp(config)\n      this.auth = app.auth()\n      this.db = app.firestore()\n      this.parentURL = getParentURL()\n   }\n\n   // *** Auth API ***\n   doCreateUserWithEmailAndPassword = (email: string, password: string) => this.auth.createUserWithEmailAndPassword(email, password)\n\n   doSignInWithEmailAndPassword = (email: string, password: string) => this.auth.signInWithEmailAndPassword(email, password)\n\n   doSignOut = () => this.auth.signOut()\n\n   doPasswordReset = (email: string) => this.auth.sendPasswordResetEmail(email)\n\n   doPasswordUpdate = (password: string) => this.auth.currentUser?.updatePassword(password)\n\n   // *** Firestore API ***\n   userRef = (uid: string) => this.db.collection('users').doc(uid)\n\n   commentsRef = () => this.db.collection('pages').doc(this.parentURL).collection('comments')\n\n   commentLikesRef = (commentRef: app.firestore.DocumentReference) => commentRef.collection('likes')\n\n   doCreateComment = (comment: IComment) => this.commentsRef().add(comment)\n}\n\n\nfunction getParentURL(): string {\n   const queryString = window.location.search.substring(1)\n   const queries = queryString.split(\"&\")\n\n   for (let query of queries) {\n      const pair = query.split('=')\n      if (pair[0] === 'parentURL') return pair[1]\n   }\n\n   return 'default'\n}","import React from 'react'\nimport { FirebaseConstructor } from './FirebaseConstructor'\n\nexport const Firebase = new FirebaseConstructor()\nexport const FirebaseContext = React.createContext<FirebaseConstructor>(Firebase)","export const GITHUB_PAGES = '/comments-system'\n\nexport const COMMENTS = '/comments'\nexport const SIGN_IN = '/signin'\nexport const SIGN_UP = '/signup'\nexport const ACCOUNT = '/account'\nexport const PASSWORD_RESET = '/password-reset'","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useLocation } from 'react-router-dom'\n\nimport * as ROUTES from '../constants/routes'\nimport { IStore } from '../constants/typescript-types'\n\nimport avatarSrc from '../img/avatar.svg'\nimport commentsSrc from '../img/comments.svg'\n\n\nexport const NavBar: React.FC = () => {\n   let { authUser, username } = useSelector((store: IStore) => store.authUserStore)\n   if (!username) username = 'Loading...'\n\n   const isCurrentPageComments = useLocation().pathname === ROUTES.COMMENTS\n   const commentsClassname = (isCurrentPageComments) ? 'navbar__button navbar__button_pressed' : 'navbar__button'\n   const accountClassname = (isCurrentPageComments) ? 'navbar__button' : 'navbar__button navbar__button_pressed'\n\n\n   return (\n      <nav className=\"navbar\">\n         <Link to={ROUTES.COMMENTS} className={commentsClassname}>\n            <img className=\"navbar__img\" src={commentsSrc} alt=\"Comments\" />\n         </Link>\n\n         {authUser ?\n            <Link to={ROUTES.ACCOUNT} className={accountClassname}>{username}</Link>\n            :\n            <Link to={ROUTES.SIGN_IN} className={accountClassname}>\n               <img className=\"navbar__img\" src={avatarSrc} alt=\"Sign In\" />\n            </Link>\n         }\n      </nav>\n   )\n}","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport app from 'firebase/app'\n\nimport { createComment } from '../../../redux/actions'\nimport * as ROUTES from '../../../constants/routes'\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport { IStore, IComment } from '../../../constants/typescript-types'\n\n\nexport const CommentForm: React.FC = () => {\n   const history = useHistory()\n   const dispatch = useDispatch()\n   const firebase = useContext(FirebaseContext)\n\n   const { authUser, username } = useSelector((store: IStore) => store.authUserStore)\n   const [text, setText] = useState<string>('')\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n      if (!username || !authUser) {\n         if (!authUser) history.push(ROUTES.SIGN_IN)\n         return\n      }\n\n      const comment: IComment = {\n         authorUsername: username,\n         authorUID: authUser?.uid,\n         text,\n         created: app.firestore.Timestamp.fromMillis(Date.now())\n      }\n\n      firebase\n         .doCreateComment(comment)\n         .then((docRef) => dispatch( createComment({ ...comment, docRef }) ))\n         .then(() => setText(''))\n         .catch((error) => console.error(\"Error adding document: \", error))\n   }\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <textarea\n            value={text}\n            onChange={(event) => setText(event.target.value)}\n            maxLength={1000}\n            placeholder=\"Write a comment...\"\n         >\n         </textarea>\n         <button type=\"submit\">Write as You</button>\n      </form>\n   )\n}","import React, { useContext, useEffect } from 'react'\nimport app from 'firebase/app'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\n\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport { setCommentLikes, setIsCommentLiked } from '../../../redux/actions'\nimport { IComment, IStore } from '../../../constants/typescript-types'\nimport * as ROUTES from '../../../constants/routes'\n\nimport heart from '../../../img/heart.svg'\nimport filledHeart from '../../../img/filled-heart.svg'\n\n\ntype TProps = { comment: IComment, commentIndex: number }\n\nexport const Comment: React.FC<TProps> = ({ comment, commentIndex }) => {\n   const history = useHistory()\n   const dispatch = useDispatch()\n   const firebase = useContext(FirebaseContext)\n   const authUser = useSelector((store: IStore) => store.authUserStore.authUser)\n\n\n   useEffect(() => {\n      loadCommentLikes()\n      //eslint-disable-next-line\n   }, [authUser])\n\n\n   function loadCommentLikes() {\n      const commentRef = comment.docRef as app.firestore.DocumentReference\n\n      firebase.commentLikesRef(commentRef).get()\n         .then((querySnapshot) => {\n            const likesCount = querySnapshot.docs.length\n            const isLiked = querySnapshot.docs.filter((doc) => doc.data().uid === authUser?.uid).length > 0\n            dispatch( setCommentLikes(commentIndex, likesCount) )\n            dispatch( setIsCommentLiked(commentIndex, isLiked) )\n         })\n   }\n\n\n   function handleLike() {\n      if (!authUser) {\n         history.push(ROUTES.SIGN_IN)\n         return\n      }\n      if (comment.likesCount === undefined || comment.isLiked === undefined) return\n\n      const authUserLikeRef = firebase.commentLikesRef(comment.docRef as app.firestore.DocumentReference).doc(authUser?.uid)\n\n      if (comment.isLiked) {\n         dispatch( setCommentLikes(commentIndex, comment.likesCount - 1) )\n         authUserLikeRef.delete()\n      } else {\n         dispatch( setCommentLikes(commentIndex, comment.likesCount + 1) )\n         authUserLikeRef.set({ uid: authUser?.uid })\n      }\n\n      dispatch( setIsCommentLiked(commentIndex, !comment.isLiked) )\n   }\n\n   \n   const heartSrc = comment.isLiked ? filledHeart : heart\n\n   return (\n      <div className=\"comment\">\n         <div className=\"comment__author\">{comment.authorUsername}</div>\n         <div className=\"comment__created\">{moment.unix(comment.created.seconds).fromNow()}</div>\n         <p>{comment.text}</p>\n         <button className=\"comment__like\" onClick={handleLike}>\n            <img src={heartSrc} alt=\"like\" width=\"20px\"/>{comment.likesCount}\n         </button>\n         <button className=\"comment__reply\">Reply</button>\n         <hr />\n      </div>\n   )\n}","import React from 'react'\nimport { CommentForm } from './CommentForm'\nimport { Comment } from './Comment'\nimport { useCommentsLoading } from './useCommentsLoading'\n\nexport const CommentsPage: React.FC = () => {\n   const { comments, loadComments, isCommentsOver } = useCommentsLoading()\n\n   const commentsTemplate = comments.map((comment, index) => (\n      <Comment\n         key={comment.created.nanoseconds}\n         commentIndex={index}\n         comment={comment}\n      />\n   ))\n\n   return (\n      <div className=\"comments\">\n         <CommentForm />\n         {commentsTemplate}\n         <button onClick={loadComments} disabled={isCommentsOver}>Load more comments</button>\n      </div>\n   )\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { TAuthUser, IStore } from '../constants/typescript-types'\nimport * as ROUTES from '../constants/routes'\n\n\ntype TCondition = (authUser: TAuthUser) => boolean\n\nexport const withAuthorisation = (condition: TCondition) => (Component: React.FC) => {\n\n   const WithAuthorisation: React.FC = (props) => {\n      const history = useHistory()\n      const authUser = useSelector((store: IStore) => store.authUserStore.authUser)\n      const isConfirm = condition(authUser)\n\n      if (!isConfirm) {\n         history.push(ROUTES.SIGN_IN)\n      }\n\n      return isConfirm ? <Component {...props} /> : null\n   }\n\n   return WithAuthorisation\n}","import { useState, useContext, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { IComment, IStore } from '../../../constants/typescript-types'\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport { addComments, setCommentsOver } from '../../../redux/actions'\n\n\nexport function useCommentsLoading() {\n   const dispatch = useDispatch()\n   const {comments, isCommentsOver} = useSelector((store: IStore) => store.commentsStore)\n   \n   const firebase = useContext(FirebaseContext)\n\n   const limit: number = 50\n   const [query, setQuery] = useState(firebase.commentsRef().orderBy('created', \"desc\").limit(limit))\n   const [loading, setLoading] = useState<boolean>(false)\n   \n   \n   function loadComments() {\n      if (loading) return\n      setLoading(true)\n      \n      query.get().then((documentSnapshots) => {\n         if (documentSnapshots.docs.length < limit) dispatch(setCommentsOver())\n         if (!documentSnapshots.docs.length) return\n         \n         const lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1]\n         setQuery(firebase.commentsRef().orderBy('created', \"desc\").limit(limit).startAfter(lastVisible))\n         \n         const loadedComments = documentSnapshots.docs.map((doc) => ({...doc.data(), docRef: doc.ref} as IComment))\n         dispatch(addComments(loadedComments))\n         \n         setLoading(false)\n      })\n   }\n   \n\n   useEffect(() => {\n      if (!comments.length) loadComments()\n      //eslint-disable-next-line\n   }, [])\n\n   return {comments, loadComments, isCommentsOver}\n}","import React, { useState, useContext } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport validator from 'email-validator';\n\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport * as ROUTES from '../../../constants/routes'\n\n\nexport const SignInPage: React.FC = () => {\n   const history = useHistory()\n   const firebase = useContext(FirebaseContext)\n\n   const [email, setEmail] = useState<string>('')\n   const [password, setPassword] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n\n      firebase\n         .doSignInWithEmailAndPassword(email, password)\n         .then(() => {\n            setEmail('')\n            setPassword('')\n            setError(null)\n\n            history.push(ROUTES.COMMENTS)\n         })\n         .catch(setError)\n   }\n\n\n   let emailClassName = 'form__input'\n   let passwordClassName = 'form__input'\n   emailClassName += (email && !validator.validate(email)) ? ' form__input_invalid' : ''\n   passwordClassName += (password && password.length < 6) ? ' form__input_invalid' : ''\n\n   const isFormInvalid = password.length < 6 || !validator.validate(email)\n\n\n   return (\n      <div className=\"form-background\">\n         <div className=\"form\">\n            <h2 className=\"form__title\">Sign In</h2>\n\n            <form onSubmit={handleSubmit}>\n               <input\n                  name=\"email\"\n                  className={emailClassName}\n                  value={email}\n                  onChange={(event) => setEmail(event.target.value.trim())}\n                  type=\"text\"\n                  placeholder=\"Email Address\"\n               />\n               <input\n                  name=\"password\"\n                  className={passwordClassName}\n                  value={password}\n                  onChange={(event) => setPassword(event.target.value.trim())}\n                  type=\"password\"\n                  placeholder=\"Password\"\n               />\n               <button disabled={isFormInvalid} type=\"submit\" className=\"form__input form__button\">\n                  Sign In\n               </button>\n\n               {error && <p className=\"form__error\">{error.message}</p>}\n            </form>\n\n            <p className=\"form__link\">\n               Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign up</Link>\n            </p>\n            <p className=\"form__link\">\n               Forgot password? <Link to={ROUTES.PASSWORD_RESET}>Reset</Link>\n            </p>\n         </div>\n      </div>\n   )\n}","import React, { useState, useContext } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport validator from 'email-validator';\n\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport * as ROUTES from '../../../constants/routes'\n\n\nexport const SignUpPage: React.FC = () => {\n   const history = useHistory()\n   const firebase = useContext(FirebaseContext)\n\n   const [username, setUsername] = useState<string>('')\n   const [email, setEmail] = useState<string>('')\n   const [passwordOne, setPasswordOne] = useState<string>('')\n   const [passwordTwo, setPasswordTwo] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n\n      firebase\n         .doCreateUserWithEmailAndPassword(email, passwordOne)\n         .then((authUser) => {\n            const uid = authUser.user?.uid\n            if (!uid) return\n            \n            firebase\n               .userRef(uid)\n               .set({ username, email })\n         })\n         .then(() => {\n            setUsername('')\n            setEmail('')\n            setPasswordOne('')\n            setPasswordTwo('')\n            setError(null)\n\n            history.push(ROUTES.COMMENTS)\n         })\n         .catch(setError)\n   }\n\n\n   let usernameClassName = 'form__input'\n   let emailClassName = 'form__input'\n   let passwordOneClassName = 'form__input'\n   let passwordTwoClassName = 'form__input'\n   usernameClassName += (username && username.length < 3 && username.length > 15) ? ' form__input_invalid' : ''\n   emailClassName += (email && !validator.validate(email)) ? ' form__input_invalid' : ''\n   passwordOneClassName += (passwordOne && passwordOne.length < 6 && passwordOne.length > 25) ? ' form__input_invalid' : ''\n   passwordTwoClassName += (passwordTwo && passwordTwo !== passwordOne) ? ' form__input_invalid' : ''\n\n   const isFormInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne.length < 6 ||\n      !validator.validate(email) ||\n      username === ''\n\n\n   return (\n      <div className=\"form-background\">\n         <div className=\"form\">\n            <h2 className=\"form__title\">Sign Up</h2>\n\n            <form onSubmit={handleSubmit}>\n               <input\n                  name=\"username\"\n                  className={usernameClassName}\n                  value={username}\n                  onChange={(event) => setUsername(event.target.value.trim())}\n                  type=\"text\"\n                  placeholder=\"Username\"\n               />\n               <input\n                  name=\"email\"\n                  className={emailClassName}\n                  value={email}\n                  onChange={(event) => setEmail(event.target.value.trim())}\n                  type=\"text\"\n                  placeholder=\"Email Address\"\n               />\n               <input\n                  name=\"passwordOne\"\n                  className={passwordOneClassName}\n                  value={passwordOne}\n                  onChange={(event) => setPasswordOne(event.target.value.trim())}\n                  type=\"password\"\n                  placeholder=\"Password\"\n               />\n               <input\n                  name=\"passwordTwo\"\n                  className={passwordTwoClassName}\n                  value={passwordTwo}\n                  onChange={(event) => setPasswordTwo(event.target.value.trim())}\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n               />\n               <button disabled={isFormInvalid} type=\"submit\" className=\"form__input form__button\">\n                  Sign Up\n               </button>\n\n               {error && <p className=\"form__error\">{error.message}</p>}\n            </form>\n\n            <p className=\"form__link\">\n               Already have an account? <Link to={ROUTES.SIGN_IN}>Sign in</Link>\n            </p>\n         </div>\n      </div>\n   )\n}","import React, { useState, useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport validator from 'email-validator';\n\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport * as ROUTES from '../../../constants/routes'\n\n\nexport const PasswordResetPage: React.FC = () => {\n   const history = useHistory()\n   const firebase = useContext(FirebaseContext)\n   \n\n   const [email, setEmail] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleReset(): void {\n      firebase\n         .doPasswordReset(email)\n         .then(() => {\n            setEmail('')\n            setError(null)\n\n            history.push(ROUTES.SIGN_IN)\n         })\n         .catch(setError)\n   }\n\n\n   let emailClassName = 'form__input'\n   emailClassName += (email && !validator.validate(email)) ? ' form__input_invalid' : ''\n\n   const isFormInvalid = !validator.validate(email)\n\n\n   return (\n      <div className=\"form-background\">\n         <div className=\"form\">\n            <h2 className=\"form__title\">Reset Password</h2>\n\n            <form onSubmit={handleReset}>\n               <input\n                  name=\"email\"\n                  className={emailClassName}\n                  value={email}\n                  onChange={(event) => setEmail(event.target.value.trim())}\n                  type=\"text\"\n                  placeholder=\"Email Address\"\n               />\n               <button disabled={isFormInvalid} type=\"submit\" className=\"form__input form__button\">\n                  Send reset email\n               </button>\n\n               {error && <p className=\"form__error\">{error.message}</p>}\n            </form>\n\n            <p className=\"form__link\">\n               Recall password? <Link to={ROUTES.SIGN_IN}>Sign in</Link>\n            </p>\n         </div>\n      </div>\n   )\n}","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\nimport * as ROUTES from '../../../constants/routes'\n\n\nexport const SignOutButton: React.FC = () => {\n   const firebase = useContext(FirebaseContext)\n   const history = useHistory()\n\n   function handleClick() {\n      firebase.doSignOut()\n      history.push(ROUTES.COMMENTS)\n   }\n\n   return (\n      <button onClick={handleClick} className=\"form__input form__button\">\n         Sign Out\n      </button>\n   )\n}","import React, { useState, useContext } from 'react'\nimport { FirebaseContext } from '../../../firebase/FirebaseContext'\n\n\nexport const PasswordUpdateForm: React.FC = () => {\n   const firebase = useContext(FirebaseContext)\n\n   const [passwordOne, setPasswordOne] = useState<string>('')\n   const [passwordTwo, setPasswordTwo] = useState<string>('')\n   const [error, setError] = useState<Error | null>(null)\n\n\n   function handleSubmit(event: React.FormEvent) {\n      event.preventDefault()\n\n      firebase\n         .doPasswordUpdate(passwordOne)\n         ?.then(() => {\n            setPasswordOne('')\n            setPasswordTwo('')\n            setError(null)\n         })\n         .catch(setError)\n   }\n\n   let passwordOneClassName = 'form__input'\n   let passwordTwoClassName = 'form__input'\n   passwordOneClassName += (passwordOne && passwordOne.length < 6) ? ' form__input_invalid' : ''\n   passwordTwoClassName += (passwordTwo && passwordTwo !== passwordOne) ? ' form__input_invalid' : ''\n\n   const isFormInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne.length < 6\n\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <input\n            name=\"passwordOne\"\n            className={passwordOneClassName}\n            value={passwordOne}\n            onChange={(event) => setPasswordOne(event.target.value.trim())}\n            type=\"password\"\n            placeholder=\"New Password\"\n         />\n         <input\n            name=\"passwordTwo\"\n            className={passwordTwoClassName}\n            value={passwordTwo}\n            onChange={(event) => setPasswordTwo(event.target.value.trim())}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n         />\n         <button disabled={isFormInvalid} type=\"submit\" className=\"form__input form__button\">\n            Update password\n               </button>\n\n         {error && <p className=\"form__error\">{error.message}</p>}\n      </form>\n   )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { SignOutButton } from './SignOutButton'\n\nimport { withAuthorisation } from '../../../firebase/withAuthorisation'\nimport { TAuthUser, IStore } from '../../../constants/typescript-types'\nimport { PasswordUpdateForm } from './PasswordUpdateForm'\n\n\nconst AccountPageBase: React.FC = () => {\n   let { authUser, username } = useSelector((store: IStore) => store.authUserStore)\n   if (!username) username = 'Loading ...'\n   const email = authUser?.email\n\n   return (\n      <div className=\"form-background\">\n         <div className=\"form\">\n            <h2 className=\"form__title form__username\">{username}</h2>\n            <h2 className=\"form__title form__email\">{email}</h2>\n            \n            <PasswordUpdateForm />\n            <hr/>\n            <SignOutButton />\n         </div>\n      </div>\n   )\n}\n\nconst condition = (authUser: TAuthUser) => !!authUser\n\nexport const AccountPage = withAuthorisation(condition)(AccountPageBase)","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport { useAuthentication } from './firebase/useAuthentication';\nimport * as ROUTES from './constants/routes'\n\nimport { NavBar } from './components/NavBar';\nimport { CommentsPage } from './components/pages/comments/CommentsPage';\nimport { SignInPage } from './components/pages/auth/SignInPage';\nimport { SignUpPage } from './components/pages/auth/SignUpPage';\nimport { PasswordResetPage } from './components/pages/auth/PasswordResetPage';\nimport { AccountPage } from './components/pages/account/AccountPage';\n\nimport 'normalize.css'\nimport './styles/style.scss'\n\n\nexport const App: React.FC = () => {\n   useAuthentication()\n   \n   return (\n      <Router basename=\"/comments-system\">\n         <NavBar />\n\n         <Route exact path='/'> <Redirect to={ROUTES.COMMENTS} /> </Route>\n         <Route path={ROUTES.GITHUB_PAGES}> <Redirect to={ROUTES.COMMENTS} /> </Route>\n\n         <Route path={ROUTES.COMMENTS} component={CommentsPage} />\n         <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n         <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n         <Route path={ROUTES.PASSWORD_RESET} component={PasswordResetPage} />\n         <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n      </Router>\n   );\n}","import { useEffect, useContext } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { TAuthUser } from '../constants/typescript-types'\nimport { changeAuthUser, setAuthUserUsername } from '../redux/actions'\nimport { FirebaseContext } from './FirebaseContext'\n\nexport function useAuthentication() {\n   const dispatch = useDispatch()\n   const firebase = useContext(FirebaseContext)\n\n   useEffect(() => {\n      const unsubscribe = firebase.auth.onAuthStateChanged((authUser: TAuthUser) => {\n         dispatch(changeAuthUser(authUser))\n         if (!authUser) return\n\n         firebase.userRef(authUser?.uid).get()\n            .then((doc) => {\n               if (!doc.exists) return\n               const username = doc.data()?.username\n               dispatch(setAuthUserUsername(username))\n            })\n      })\n\n      return unsubscribe\n      // eslint-disable-next-line\n   }, [])\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { rootReducer } from './redux/rootReducer';\n\nimport { App } from './App';\nimport { Firebase, FirebaseContext } from './firebase/FirebaseContext';\n\n\nconst persistConfig = {\n   key: 'root',\n   blacklist: ['commentsStore'],\n   storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store: any = createStore(persistedReducer, composeWithDevTools())\nconst persistor = persistStore(store)\n\n\nrender(\n   <React.StrictMode>\n      <Provider store={store}>\n         <PersistGate loading={null} persistor={persistor}>\n            <FirebaseContext.Provider value={Firebase}>\n               <App />\n            </FirebaseContext.Provider>\n         </PersistGate>\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);"],"sourceRoot":""}